--TRIZ AIMBOT
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera
local Replicated = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local CircleRadius = 170
local BulletSpeed = 2200
local TargetPlayer = nil
local RightMouseButtonHeld = false
local AimingEnabled = true
local CircleVisible = true

local Circle = Drawing.new("Circle")
Circle.Visible = CircleVisible
Circle.Color = Color3.fromRGB(107, 98, 155)
Circle.Thickness = 2
Circle.Radius = CircleRadius
Circle.Filled = false

local viewportSize = Camera.ViewportSize
Circle.Position = Vector2.new(viewportSize.X/2, viewportSize.Y/2)

local function getBulletSpeed()
    local character = LocalPlayer.Character
    if character then
        local gun = character:FindFirstChild("CurrentSelectedObject")
        if gun and gun.Value then
            local weaponData = Replicated:FindFirstChild("GunData"):FindFirstChild(gun.Value.Value.Name)
            return weaponData and weaponData.Stats.BulletSettings.BulletSpeed.Value or 2200
        end
    end
    return 2200
end

local function predictPosition(targetPosition, targetVelocity)
    local distance = (targetPosition - Camera.CFrame.Position).Magnitude
    if distance < 1 then return targetPosition end
    local travelTime = distance / BulletSpeed
    return targetPosition + targetVelocity * travelTime * 1.054 + Vector3.new(0, 50 * travelTime^2 * 1.052, 0)
end

local function aimAtTarget()
    if not TargetPlayer or not TargetPlayer.Character then return end
    local rootPart = TargetPlayer.Character:FindFirstChild("ServerColliderHead")
    if rootPart and rootPart:IsA("BasePart") then
        local futurePos = predictPosition(rootPart.Position, rootPart.Velocity)
        local screenPoint = Camera:WorldToViewportPoint(futurePos)
        
        if screenPoint.Z > 0 then
            local deltaX = screenPoint.X - (viewportSize.X/2)
            local deltaY = screenPoint.Y - (viewportSize.Y/2)
            mousemoverel(deltaX, deltaY)
        end
    end
end

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        RightMouseButtonHeld = true
    elseif input.KeyCode == Enum.KeyCode.F2 then
        AimingEnabled = not AimingEnabled
        CircleVisible = not CircleVisible
        TargetPlayer = nil
        Circle.Visible = CircleVisible 
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        RightMouseButtonHeld = false
        TargetPlayer = nil
    end
end)

RunService.RenderStepped:Connect(function()

    viewportSize = Camera.ViewportSize
    Circle.Position = Vector2.new(viewportSize.X/2, viewportSize.Y/2)
    Circle.Radius = CircleRadius
    BulletSpeed = getBulletSpeed()
    
    if RightMouseButtonHeld and AimingEnabled and CircleVisible then
        local closestDistance = math.huge
        local currentTarget = nil
        
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                local rootPart = player.Character:FindFirstChild("ServerColliderHead")
                if rootPart and rootPart:IsA("BasePart") then
                    local screenPos = Camera:WorldToViewportPoint(rootPart.Position)
                    
                    if screenPos.Z > 0 then
                        local center = Vector2.new(viewportSize.X/2, viewportSize.Y/2)
                        local distance = (Vector2.new(screenPos.X, screenPos.Y) - center).Magnitude
                        
                        if distance < CircleRadius and distance < closestDistance then
                            closestDistance = distance
                            currentTarget = player
                        end
                    end
                end
            end
        end
        
        TargetPlayer = currentTarget
        aimAtTarget()
    else
        TargetPlayer = nil
    end
end)